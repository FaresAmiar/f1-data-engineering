services:
  terraform:
    build:
      context: .
      dockerfile: docker/Dockerfile.terraform
    container_name: terraform
    volumes:
      - ~/.config/gcloud:/root/.config/gcloud:ro
      - ./.env:/workspace/.env
    working_dir: /workspace
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/workspace/sa.json
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "terraform", "version"]
      interval: 30s
      timeout: 10s
      retries: 3



  f1_ingestion:
    build:
      context: .
      dockerfile: docker/Dockerfile.ingestion
    container_name: f1_ingestion
    working_dir: /app
    depends_on:
      terraform:
        condition: service_healthy
    volumes:
      - ./data:/app/data
    env_file:
      - .env
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/sa.json
    command: >
      bash -c "ls -l /app && ls -l /app/scripts &&
               python scripts/ingestion.py &&
               python scripts/upload_to_gcs.py"

  spark_job:
    #image: bitnami/spark:3.3.2
    build :
      context: .
      dockerfile: docker/Dockerfile.spark
    user: root
    container_name: spark_job
    depends_on:
      f1_ingestion:
        condition: service_healthy
    volumes:
      - ./data:/app/data
    env_file:
      - .env
    working_dir: /app
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/sa.json
    command: >
      bash -c "ls -l /app/data && spark-submit scripts/spark_job.py"

  
  f1_upload_processed:
    build:
      context: .
      dockerfile: docker/Dockerfile.upload_processed
    container_name: upload_processed
    depends_on:
      spark_job:
        condition: service_healthy
    working_dir: /app
    volumes:
      - ./data:/app/data
    env_file:
      - .env
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/sa.json
    command: >
      bash -c "ls -l && python upload_processed.py"

      
  # DBT: Container dédié pour exécuter les modèles DBT sur BigQuery
  dbt:
    build:
      context: .
      dockerfile: docker/Dockerfile.dbt
    depends_on:
      f1_upload_processed:
        condition: service_healthy
    container_name: f1_dbt
    env_file:
      - .env
    volumes:
      - ./dbt_project:/app/dbt_project
    command: >
      bash -c "dbt debug && dbt run"
